@model ResultModel

@{
    Layout = "_Layout";
    ViewBag.Title = "Result";
}

<div>
    @if (@Model.faultTriggered)
    {
        if (@Model.faultCode == faultCode.Unspported)
        {
            <h1>Failed to generate playlist</h1>
            <p>Could not scrape the youtube playlist, check the Id you pasted is complete.<br /> Currently Youtube generated "Mix" playlist are also not supported</p>
        }
        else if (@Model.faultCode == faultCode.ConversionFailed)
        {
            <h1>Oof, the app failed to convert a legit youtube playlist</h1>
            <p>Please inform the poor basterd who made this <br />his app isn't working <a href="mailto:sam.b5687@gmail.com">by sending him an email.</a><br /> Be sure to include the playlist id you used below</p>
            <h2>Original Youtube Playlist: </h2>
            <a href="@Model.YoutubeLink">@Model.YoutubeLink</a>
        }
        else if (@Model.faultCode == faultCode.AuthExpired)
        {
            <h2>So you took too long to find your playlist that your spotify authorization expired?</h2>
            <h2>You'll need to reauthenticate with spotify, click the button below</h2>
            <form id="authBlock" method="post" asp-action="TriggerAuth" asp-controller="Auth">
                <div class="form-group">
                    <button class="btn btn-primary" type="submit">Authorize Spotify</button>
                </div>
            </form>
        }
    }

</div>


@if (!@Model.faultTriggered)
{
    <h1>Your Converted Spotify Playlist is Ready!</h1>
    <h2>Original Youtube Playlist: </h2>
    <a href="@Model.YoutubeLink">@Model.YoutubeLink</a>
    <h2>New Spotify Playlist: </h2>
    <a href="@Model.SpotifyLink">@Model.SpotifyLink</a>
    <div class="table-responsive">
        <table class="table table-striped w-auto" style="text-align: start">
            <thead class="thead-light">
                <tr>
                    <th style="width: 5%" scope="col">#</th>
                    <th style="width: 47.5%" scope="col">Youtube Videos Total: (@Model.OriginalYoutubeVideoCount)</th>
                    <th style="width: 47.5%" scope="col">Spotify Tracks Total: Found: (@Model.FoundSpotifyTracks)</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.OriginalYoutubeVideoCount; i++)
                {
                    int j = i + 1;
                    <tr>
                        <th scope="row">@j</th>
                        <td>
                            <div class="container-fluid">
                                <div class="row">
                                    <img style="height:10em;object-fit: contain" class="img-fluid d-block float-start" src="@Model.PlaylistItems[i].OriginalYoutubeObject.ThumbnailURL" />
                                </div>
                                <div class="row">
                                    @Model.PlaylistItems[i].YoutubeArtists :
                                </div>
                                <div class="row">
                                    @Model.PlaylistItems[i].OriginalYoutubeObject.VideoTitle
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="container-fluid">
                                <div class="row">
                                    <img style="height:10em;object-fit: contain" class="img-fluid d-block float-start" src="@Model.PlaylistItems[i].FoundSpotifyTrack.Album.Images.First().Url" />
                                </div>
                                <a href="@Model.PlaylistItems[i].FoundSpotifyTrack?.Uri">
                                    <div class="row">
                                        @Model.PlaylistItems[i].FoundSpotifyTrack?.Album
                                    </div>
                                    <div class="row">
                                        @Model.PlaylistItems[i].SpotifyArtists
                                    </div>
                                    <div class="row">
                                        @Model.PlaylistItems[i].FoundSpotifyTrack?.Name
                                    </div>
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}






